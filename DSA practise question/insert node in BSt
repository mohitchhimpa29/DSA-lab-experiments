#include<iostream>
using namespace std;

class node{
    public:
    int data;
    node* left;
    node* right;
    
    node(int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};

node* insert(node* root , int target){

    // if(root == NULL){   // base case
    if(!root){   // this condition is also written as if(root==NULL)
        node * temp = new node(target);
        return temp;
    }

    if(target<root->data){   // left side
        root->left = insert(root->left,target);
    }
    else{    // right side
        root->right = insert(root->right,target);
    }
    return root;
}

void inorder(node* root){
    if(root == NULL){   // base case
        return;
    }

    // left side
    inorder(root->left);
    // node print
    cout << root->data << " ";
    // right side
    inorder(root->right);
}

int main(){
    int arr[] = {1,9,5,74,47,0,25,63,94,55};

    node* root = NULL;
    for(int i=0; i<10; i++){
        root = insert(root, arr[i]);
    }

    cout << "inorder traversal is : " << endl;
    inorder(root);
return 0;
}
